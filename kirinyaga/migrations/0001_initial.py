# -*- coding: utf-8 -*-
# Generated by Django 1.11.22 on 2021-10-02 07:58
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields
import phonenumber_field.modelfields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_profile', models.BooleanField(default=False)),
                ('is_finder', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('photo', imagekit.models.fields.ProcessedImageField(upload_to='images')),
            ],
            options={
                'ordering': ('-date_added',),
                'verbose_name_plural': 'Facilities',
            },
        ),
        migrations.CreateModel(
            name='Attraction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('tag_line', models.CharField(blank=True, max_length=200)),
                ('slug', models.SlugField(max_length=250, unique_for_date='date_added')),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('detail', models.TextField()),
                ('photo', imagekit.models.fields.ProcessedImageField(blank=True, upload_to='attractions')),
            ],
        ),
        migrations.CreateModel(
            name='Eat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('tag_line', models.CharField(blank=True, max_length=200)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('description', models.TextField()),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('photo', imagekit.models.fields.ProcessedImageField(upload_to='eats')),
                ('slug', models.SlugField(max_length=200)),
                ('website', models.URLField(blank=True)),
                ('location', models.CharField(max_length=200)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eats', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EatImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('image', imagekit.models.fields.ProcessedImageField(upload_to='eat_images')),
                ('eat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eat_images', to='kirinyaga.Eat')),
            ],
            options={
                'ordering': ('-date_added',),
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('photo', imagekit.models.fields.ProcessedImageField(upload_to='images')),
            ],
            options={
                'ordering': ('-date_added',),
                'verbose_name_plural': 'Facilities',
            },
        ),
        migrations.CreateModel(
            name='Highlight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100)),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('attraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='highlights', to='kirinyaga.Attraction')),
            ],
            options={
                'ordering': ('-date_added',),
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100)),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('image', imagekit.models.fields.ProcessedImageField(upload_to='images')),
                ('attraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='kirinyaga.Attraction')),
            ],
            options={
                'ordering': ('-date_added',),
            },
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('date_added', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('-date_added',),
            },
        ),
        migrations.CreateModel(
            name='InterestingPlace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('date_added', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('-date_added',),
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField()),
                ('price', models.PositiveIntegerField()),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('eat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menus', to='kirinyaga.Eat')),
            ],
            options={
                'ordering': ('-date_added',),
            },
        ),
        migrations.CreateModel(
            name='OpeningHours',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('day', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=200)),
                ('opening_time', models.TimeField()),
                ('closing_time', models.TimeField()),
                ('eat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opening_hours', to='kirinyaga.Eat')),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_line', models.CharField(blank=True, max_length=200)),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('photo', imagekit.models.fields.ProcessedImageField(upload_to='images')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('website', models.URLField()),
                ('detail', models.TextField()),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(max_length=100)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlaceImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100)),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('image', imagekit.models.fields.ProcessedImageField(upload_to='place_images')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='place_images', to='kirinyaga.Place')),
            ],
            options={
                'ordering': ('-date_added',),
            },
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('photo', imagekit.models.fields.ProcessedImageField(upload_to='rooms')),
                ('price', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ('-date_added',),
                'verbose_name_plural': 'RoomTypes',
            },
        ),
        migrations.CreateModel(
            name='Stay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_line', models.CharField(blank=True, max_length=200)),
                ('name', models.CharField(max_length=100)),
                ('rooms', models.PositiveIntegerField()),
                ('description', models.TextField()),
                ('photo', imagekit.models.fields.ProcessedImageField(upload_to='images')),
                ('location', models.CharField(max_length=200)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(max_length=200)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stays', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StayFacility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('photo', imagekit.models.fields.ProcessedImageField(upload_to='stay_facilities')),
                ('stay', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stay_facilities', to='kirinyaga.Stay')),
            ],
            options={
                'ordering': ('-date_added',),
                'verbose_name_plural': 'StayFacilities',
            },
        ),
        migrations.CreateModel(
            name='StayImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('image', imagekit.models.fields.ProcessedImageField(upload_to='stay_images')),
                ('stay', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stay_images', to='kirinyaga.Stay')),
            ],
            options={
                'ordering': ('-date_added',),
            },
        ),
        migrations.CreateModel(
            name='StayType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='SubCounty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('detail', models.TextField(blank=True)),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(max_length=250, unique_for_date='date_added')),
            ],
            options={
                'ordering': ('-date_added',),
                'verbose_name_plural': 'SubCounties',
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('stay', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terms', to='kirinyaga.Stay')),
            ],
            options={
                'ordering': ('-date_added',),
            },
        ),
        migrations.CreateModel(
            name='Vital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('attraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vitals', to='kirinyaga.Attraction')),
            ],
            options={
                'ordering': ('-date_added',),
            },
        ),
        migrations.AddField(
            model_name='stay',
            name='stay_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stays', to='kirinyaga.StayType'),
        ),
        migrations.AddField(
            model_name='stay',
            name='sub_county',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_counties', to='kirinyaga.SubCounty'),
        ),
        migrations.AddField(
            model_name='stay',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='roomtype',
            name='stay',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_types', to='kirinyaga.Stay'),
        ),
        migrations.AddField(
            model_name='place',
            name='sub_county',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to='kirinyaga.SubCounty'),
        ),
        migrations.AddField(
            model_name='place',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='interestingplace',
            name='stay',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interesting_places', to='kirinyaga.Stay'),
        ),
        migrations.AddField(
            model_name='interest',
            name='place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interest', to='kirinyaga.Place'),
        ),
        migrations.AddField(
            model_name='facility',
            name='place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facilities', to='kirinyaga.Place'),
        ),
        migrations.AddField(
            model_name='eat',
            name='sub_county',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eats', to='kirinyaga.SubCounty'),
        ),
        migrations.AddField(
            model_name='eat',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='attraction',
            name='sub_county',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attractions', to='kirinyaga.SubCounty'),
        ),
        migrations.AddField(
            model_name='attraction',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='activity',
            name='place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='kirinyaga.Place'),
        ),
    ]
